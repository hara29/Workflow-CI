name: CI MLflow Training

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  train:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      MLFLOW_TRACKING_URI: https://dagshub.com/hara29/bank-attrition-modelling.mlflow
      DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/bank-mlflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install conda
          conda create -n mlflow-env --file conda.yaml -y || true
          conda activate mlflow-env

      - name: Run MLflow Project
        run: |
          mlflow run . --env-manager=local --experiment-name "RandomForest_ManualLogging"

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          echo "Getting latest run ID from DagsHub..."
          python <<EOF
          import mlflow
          client = mlflow.tracking.MlflowClient()
          exp = client.get_experiment_by_name("RandomForest_ManualLogging")
          if exp is None:
              raise Exception("Experiment not found.")
          runs = client.search_runs(experiment_ids=[exp.experiment_id], order_by=["start_time DESC"])
          if not runs:
              raise Exception("No runs found.")
          run_id = runs[0].info.run_id
          print(f"::set-output name=run_id::{run_id}")
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image from MLflow Model
        run: |
          echo "Building Docker image from model logged to DagsHub..."
          mlflow models build-docker \
            --model-uri "runs:/${{ steps.get_run_id.outputs.run_id }}/model" \
            --name ${{ env.DOCKER_IMAGE_NAME }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}

      - name: Upload Model Artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-model
          path: mlruns/
